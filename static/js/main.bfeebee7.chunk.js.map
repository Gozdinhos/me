{"version":3,"sources":["components/githubblog.svg","components/twitterpost.svg","components/instagrampost.svg","components/linkedinpost.svg","components/whatsapp.svg","components/facebook.svg","components/cardBackground.jpg","components/pixelart.jpg","components/about.jpg","components/heart.svg","components/linkedin.svg","components/github.svg","components/mail.svg","components/phone.svg","components/pin.svg","components/instagram.svg","components/twitter.svg","components/calculator.svg","components/temperature.svg","components/gamepad.svg","components/time.svg","components/law.svg","components/list.svg","components/climate.svg","components/books.jpg","components/project.svg","components/Header.js","components/Home.js","components/About.js","components/Contact.js","components/Work.js","components/Blog.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","state","Ä±mages","bodyImg","pixelart","addbodyImg","changebodyImg","setState","cardBackground","className","exact","to","onClick","this","Component","Home","About","src","about","Contact","heart","mail","phone","pin","href","target","linkedin","github","instagram","twitter","Work","projects","name","description","link","githubLink","url","calculator","gamepad","temperature","time","law","list","climate","githubblog","alt","Blog","posts","date","books","post","postMore","expander","e","parentNode","querySelector","classList","toggle","linkedinpost","twitterpost","facebook","instagrampost","whatsapp","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bfeebee7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/githubblog.f50b7b92.svg\";","module.exports = __webpack_public_path__ + \"static/media/twitterpost.b105c81b.svg\";","module.exports = __webpack_public_path__ + \"static/media/instagrampost.68f39aa1.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedinpost.93f0f737.svg\";","module.exports = __webpack_public_path__ + \"static/media/whatsapp.a9abba20.svg\";","module.exports = __webpack_public_path__ + \"static/media/facebook.6b6d6c65.svg\";","module.exports = __webpack_public_path__ + \"static/media/cardBackground.17323a01.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pixelart.75fb8e75.jpg\";","module.exports = __webpack_public_path__ + \"static/media/about.4354a2ad.jpg\";","module.exports = __webpack_public_path__ + \"static/media/heart.7e424a53.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.95bc8f90.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.4d22583d.svg\";","module.exports = __webpack_public_path__ + \"static/media/mail.d8e900f3.svg\";","module.exports = __webpack_public_path__ + \"static/media/phone.e7e2dd9f.svg\";","module.exports = __webpack_public_path__ + \"static/media/pin.a7ee7661.svg\";","module.exports = __webpack_public_path__ + \"static/media/instagram.d576a87d.svg\";","module.exports = __webpack_public_path__ + \"static/media/twitter.65b412f5.svg\";","module.exports = __webpack_public_path__ + \"static/media/calculator.17101008.svg\";","module.exports = __webpack_public_path__ + \"static/media/temperature.574b8a3e.svg\";","module.exports = __webpack_public_path__ + \"static/media/gamepad.829187f8.svg\";","module.exports = __webpack_public_path__ + \"static/media/time.0587ae13.svg\";","module.exports = __webpack_public_path__ + \"static/media/law.bb7ba729.svg\";","module.exports = __webpack_public_path__ + \"static/media/list.ca0b78d4.svg\";","module.exports = __webpack_public_path__ + \"static/media/climate.f6729233.svg\";","module.exports = __webpack_public_path__ + \"static/media/books.5a90bb18.jpg\";","module.exports = __webpack_public_path__ + \"static/media/project.3eca2c48.svg\";","import React, { Component } from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport cardBackground from './cardBackground.jpg';\nimport pixelart from './pixelart.jpg';\n\nclass Header extends Component {\n  state = {\n    Ä±mages: [\n      {\n        bodyImg: pixelart\n      }\n    ],\n\n    addbodyImg: {\n      bodyImg: ''\n    }\n  };\n\n  changebodyImg = () => {\n    this.setState({\n      addbodyImg: {\n        ...this.state.addbodyImg,\n        bodyImg: cardBackground\n      }\n    });\n  };\n\n  render() {\n    return (\n      <div className='header'>\n        <div className='headerItem'>\n          <NavLink exact to='/'>\n            HOME|\n          </NavLink>\n        </div>\n        <div className='headerItem'>\n          <NavLink to='/about'>ABOUT|</NavLink>\n        </div>\n        <div className='headerItem'>\n          <NavLink to='/work'>PROJECTS|</NavLink>\n        </div>\n        <div className='headerItem'>\n          <NavLink onClick={this.changebodyImg} to='/BLOG'>\n            BLOG|\n          </NavLink>\n        </div>\n        <div className='headerItem'>\n          <NavLink to='/contact'>CONTACT</NavLink>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\n\nclass Home extends Component {\n  render() {\n    return (\n      <div className='homeBody'>\n        <div className='hello'>\n          HELLO! <br></br>I'M GOZDE -A FRONTEND DEVELOPER. <br></br>I'M HERE TO\n          MAKE WEB A BEAUTIFUL PLACE.\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport about from './about.jpg';\n\nclass About extends Component {\n  render() {\n    return (\n      <div className='aboutContainer'>\n        <p className='meetMe'>Meet GÃ¶zde</p> <hr></hr>\n        <div>\n          <img className='aboutImage' src={about} />\n        </div>\n        <div className='meExplained'>\n          GÃ¶zde is a front-end developer and design enthusiastic, based in\n          London. <br />\n          She enjoys solving problems and designing. <br />\n          She is also a bookworm, craft-lover, foodie and traveller.\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default About;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport heart from './heart.svg';\nimport linkedin from './linkedin.svg';\nimport github from './github.svg';\nimport mail from './mail.svg';\nimport phone from './phone.svg';\nimport pin from './pin.svg';\nimport instagram from './instagram.svg';\nimport twitter from './twitter.svg';\n\nclass Contact extends Component {\n  render() {\n    return (\n      <div className='contactContainer'>\n        <div className='wouldHelp'>\n          I would <img className='heart' src={heart} /> to help!\n        </div>\n        <div className='contact'>\n          <div className='miniIcon'>\n            <img src={mail} />\n            &nbsp;&nbsp; <div> gozdetekalmaz@gmail.com</div>\n          </div>\n          <div className='miniIcon'>\n            <img src={phone} /> &nbsp;<div> +44 7832 833591</div>\n          </div>\n          <div className='miniIcon'>\n            {' '}\n            <img src={pin} /> &nbsp;\n            <div>48-50 Inverness Terrace,London</div>\n          </div>\n        </div>\n        <hr />\n        <div className='contactIcon'>\n          <a href='https://www.linkedin.com/in/gozde-tekalmaz/' target='blank'>\n            <img className='icon' src={linkedin} />\n          </a>\n          <a href='https://github.com/gozdinhos' target='blank'>\n            <img className='icon' src={github} />\n          </a>\n          <a href='https://www.instagram.com/gozdetekalmaz/' target='blank'>\n            <img className='icon' src={instagram} />\n          </a>\n          <a href='https://twitter.com/gozdinhos' target='blank'>\n            <img className='icon' src={twitter}></img>\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Contact;\n","import React, { Component } from 'react';\nimport project from './project.svg';\nimport calculator from './calculator.svg';\nimport temperature from './temperature.svg';\nimport gamepad from './gamepad.svg';\nimport time from './time.svg';\nimport law from './law.svg';\nimport githubblog from './githubblog.svg';\nimport list from './list.svg';\nimport climate from './climate.svg';\n\nclass Work extends Component {\n  state = {\n    projects: [\n      {\n        name: 'Calculator',\n        description:\n          'Considering that calculators are the first computers of human beings, a portfolio without a calculator is hard to imagine. This calculator is developed by using Vanilla JS, HTML and CSS, and also the color palette is inspired by Apple iOS calculator.',\n        link: ' https://gozdinhos.github.io/calculator/',\n        githubLink: 'https://github.com/Gozdinhos/calculator',\n        url: calculator,\n      },\n\n      {\n        name: 'Rock Paper Scissors',\n        description:\n          'The oldest decision making mechanism, the rock paper scissors game, returns with this application! This mini-game developed with Vanilla JS is designed by using CSS.',\n        link: '',\n        githubLink: '',\n        url: gamepad,\n      },\n      {\n        name: 'Temperature Converter',\n        description:\n          'Converting temperature units to each other in physics was often challenging. Fortunately, we now have this converter. The application was developed with Vanilla JS and designed with CSS.',\n        link: '',\n        githubLink: '',\n        url: temperature,\n      },\n      {\n        name: 'Hufflepuff Theme Clock',\n        description:\n          'This application, developed with Vanilla JS and designed with CSS, is a watch developed for muggles. The color palette is created with inspiration from the hufflepuff house colors.',\n        link: '',\n        githubLink: '',\n        url: time,\n      },\n      {\n        name: 'Weight Converter',\n        description:\n          'A simple and fast mini-application is developed for converting weight units each other. This converter is developed with Vanilla JS and designed by using CSS.',\n        link: '',\n        githubLink: '',\n        url: law,\n      },\n      {\n        name: 'React To-Do App',\n        description:\n          'Everyone has a different style when it comes to using a to-do list. This application has been designed in a simple way to perform adding and deleting tasks. The application is developed with React by using route, axios and designed with CSS.',\n        link: '',\n        githubLink: '',\n        url: list,\n      },\n      {\n        name: 'Weather App',\n        description:\n          'This weather application has been designed in a simple way to show weather forecast everywhere in the world. The application is developed with React by using route, axios and designed with CSS.',\n        link: '',\n        githubLink: '',\n        url: climate,\n      },\n    ],\n  };\n\n  render() {\n    return (\n      <div className='projectsContainer'>\n        <div className='projectItem'>\n          <img className='projectImage' src={this.state.projects[6].url} />\n          <p className='projectName'>{this.state.projects[6].name}</p>\n          <p className='projectDesc'>{this.state.projects[6].description}</p>\n          <div className='projectView'>\n            <a href='https://gozdinhos.github.io/weather-app/' target='blank'>\n              <p className='viewDetails'>LIVE DEMO â¶</p>\n            </a>\n            <a href='https://github.com/Gozdinhos/weather-app' target='blank'>\n              <img className='blogIcon' src={githubblog} alt='' />\n            </a>\n            Peek Code\n          </div>\n        </div>\n        <div className='projectItem'>\n          <img className='projectImage' src={this.state.projects[5].url} />\n          <p className='projectName'>{this.state.projects[5].name}</p>\n          <p className='projectDesc'>{this.state.projects[5].description}</p>\n          <div className='projectView'>\n            <a href='https://gozdinhos.github.io/react-todo/#/' target='blank'>\n              <p className='viewDetails'>LIVE DEMO â¶</p>\n            </a>\n            <a href='https://github.com/Gozdinhos/react-todo' target='blank'>\n              <img className='blogIcon' src={githubblog} alt='' />\n            </a>\n          </div>\n        </div>\n        <div className='projectItem'>\n          <img className='projectImage' src={this.state.projects[0].url} />\n          <p className='projectName'>{this.state.projects[0].name}</p>\n          <p className='projectDesc'>{this.state.projects[0].description}</p>\n          <div className='projectView'>\n            <a href='https://gozdinhos.github.io/calculator/' target='blank'>\n              <p className='viewDetails'>LIVE DEMO â¶</p>\n            </a>\n            <a href='https://github.com/Gozdinhos/calculator' target='blank'>\n              <img className='blogIcon' src={githubblog} alt='' />\n            </a>\n          </div>\n        </div>\n        <div className='projectItem'>\n          <img className='projectImage' src={this.state.projects[1].url} />\n          <p className='projectName'>{this.state.projects[1].name}</p>\n          <p className='projectDesc'>{this.state.projects[1].description}</p>\n\n          <a href='https://gozdinhos.github.io/RPS/' target='blank'>\n            <p className='viewDetails'>LIVE DEMO â¶</p>\n          </a>\n          <a href='https://github.com/Gozdinhos/RPS' target='blank'>\n            <img className='blogIcon' src={githubblog} alt='' />\n          </a>\n        </div>\n\n        <div className='projectItem'>\n          <img className='projectImage' src={this.state.projects[2].url} />\n          <p className='projectName'>{this.state.projects[2].name}</p>\n          <p className='projectDesc'>{this.state.projects[2].description}</p>\n          <a\n            href='https://gozdinhos.github.io/Temperature_Converter/'\n            target='blank'\n          >\n            <p className='viewDetails'>LIVE DEMO â¶</p>\n          </a>\n          <a\n            href='https://github.com/Gozdinhos/Temperature_Converter'\n            target='blank'\n          >\n            <img className='blogIcon' src={githubblog} alt='' />\n          </a>\n        </div>\n        <div className='projectItem'>\n          <img className='projectImage' src={this.state.projects[3].url} />\n          <p className='projectName'>{this.state.projects[3].name}</p>\n          <p className='projectDesc'>{this.state.projects[3].description}</p>\n          <a\n            href='https://gozdinhos.github.io/hufflepuff_themed_digital_clock/'\n            target='blank'\n          >\n            <p className='viewDetails'>LIVE DEMO â¶</p>\n          </a>\n          <a\n            href='https://github.com/Gozdinhos/hufflepuff_themed_digital_clock'\n            target='blank'\n          >\n            <img className='blogIcon' src={githubblog} alt='' />\n          </a>\n        </div>\n\n        <div className='projectItem'>\n          <img className='projectImage' src={this.state.projects[4].url} />\n          <p className='projectName'>{this.state.projects[4].name}</p>\n          <p className='projectDesc'>{this.state.projects[4].description}</p>\n          <a\n            href='https://gozdinhos.github.io/weight_converter/'\n            target='blank'\n          >\n            <p className='viewDetails'>LIVE DEMO â¶</p>\n          </a>\n          <a\n            href='https://github.com/Gozdinhos/weight_converter'\n            target='blank'\n          >\n            <img className='blogIcon' src={githubblog} alt='' />\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Work;\n","import React, { Component } from 'react';\nimport twitterpost from './twitterpost.svg';\nimport instagrampost from './instagrampost.svg';\nimport linkedinpost from './linkedinpost.svg';\nimport whatsapp from './whatsapp.svg';\nimport facebook from './facebook.svg';\nimport books from './books.jpg';\n\nclass Blog extends Component {\n  state = {\n    posts: [\n      {\n        name: '5 BOOKS EVERY DEVELOPER SHOULD READ',\n        date: 'February 23, 2020',\n        url: books,\n        post: '',\n        postMore:\n          'Lorem ipsum dolor sit amet consectetur adipisicing elit.Lorem ipsum dolor sit amet consectetur adipisicing elit.Lorem ipsum dolor sit amet consectetur adipisicing elit.Lorem ipsum dolor sit amet consectetur adipisicing elit.Lorem ipsum dolor sit amet consectetur adipisicing elit.'\n      },\n      {\n        name: '5 books every developer must read',\n        post: 'Lorem ipsum dolor sit amet consectetur adipisicing elit.',\n        postMore:\n          'Lorem ipsum dolor sit amet consectetur adipisicing elit.Lorem ipsum dolor sit amet consectetur adipisicing elit.Lorem ipsum dolor sit amet consectetur adipisicing elit.Lorem ipsum dolor sit amet consectetur adipisicing elit.Lorem ipsum dolor sit amet consectetur adipisicing elit.'\n      },\n      {\n        name: '5 books every developer must read',\n        post: 'Lorem ipsum dolor sit amet consectetur adipisicing elit.',\n        postMore:\n          'Lorem ipsum dolor sit amet consectetur adipisicing elit.Lorem ipsum dolor sit amet consectetur adipisicing elit.Lorem ipsum dolor sit amet consectetur adipisicing elit.Lorem ipsum dolor sit amet consectetur adipisicing elit.Lorem ipsum dolor sit amet consectetur adipisicing elit.'\n      },\n      {\n        name: '5 books every developer must read',\n        post: 'Lorem ipsum dolor sit amet consectetur adipisicing elit.',\n        postMore:\n          'Lorem ipsum dolor sit amet consectetur adipisicing elit.Lorem ipsum dolor sit amet consectetur adipisicing elit.Lorem ipsum dolor sit amet consectetur adipisicing elit.Lorem ipsum dolor sit amet consectetur adipisicing elit.Lorem ipsum dolor sit amet consectetur adipisicing elit.'\n      }\n    ]\n  };\n\n  expander = e => {\n    e.target.parentNode.querySelector('.blogPost').classList.toggle('expand');\n  };\n\n  render() {\n    return (\n      <div className='blogContainer'>\n        <div className='blogItem'>\n          <div className='blogDate'>{this.state.posts[0].date}</div>\n          <div className='blogName'>{this.state.posts[0].name}</div>\n          <img className='blogImage' src={this.state.posts[0].url} />\n          <p className='blogPost'>\n            <p>\n              Books are a great source of knowledge and wisdom. Most programmers\n              are self-taught and realize the power of learning through books.\n              If you aren't too keen on books, it is about time for you to take\n              the plunge and to code better. With fast-paced developments in\n              technology, there are new programming languages and tools being\n              introduced. Regardless of the language and the coding method, a\n              good approach to problem solving can be found from constantly\n              reading good books and here are some recommendations that we'd\n              like to make. <br></br>\n            </p>\n            <p>\n              1. The Pragmatic Programmer <br></br>This is not a programming\n              book per se, that will teach you how to code. The wisdom shared in\n              this book applies to all the programming languages out there. The\n              insights shared in The Pragmatic Programmer can help you produce\n              better designs, develop a great team and manage expectations in a\n              better manner. Reading this book can help you improve your overall\n              personality as a programmer. <br></br>\n            </p>{' '}\n            2. You Donât Know JS by Kyle Simpson <br></br>This book series by\n            Kyle Simpson is considered to be a bible for JavaScript. Every\n            developer getting started with JS must read this book. The book will\n            require a bit of programming background but itâs worth reading. The\n            author has published the full copy of each book in this series on\n            GitHub. <br></br>3. HTML & CSS: Design and Build Web Sites by Jon\n            Duckett <br></br> Some of the insights shared in this book cannot be\n            found on any discussion forum on the internet. Every time you pick\n            up this book, you will read something. The book is full of knowledge\n            around HTML and CSS. You cannot read and learn everything covered in\n            this book, all at once. So take your time and imbibe the knowledge\n            each time you return to this book. <br></br>4. Clean Code by Robert\n            C Martin<br></br>This is an epic book on software craftsmanship. The\n            book will not only help you become a good coder, but it will teach\n            you effective ways to approach software development. The book\n            includes insights on the principles, practices, and patterns of\n            writing clean code. It comprises of several case studies to help\n            developers learn valuable lessons of cleaning up the code.<br></br>{' '}\n            5. Working Effectively With Legacy Code by Michael C Feathers{' '}\n            <br></br> Working with legacy code is the most boring job for any\n            developer. At the same time, there is nothing more important in any\n            job than legacy code. The book describes how to modify legacy code,\n            identify parts of the code to refactor. The book also answers\n            several key questions that anybody working on a legacy code will\n            have. <br />\n            <p className='techgig'>\n              *This article is taken from techgig.com for a sample blog post\n              view.\n            </p>\n          </p>\n          <button className='blogMore' onClick={this.expander}>\n            MORE\n          </button>\n          <div className='blogShare'>\n            <img className='blogIcon' src={linkedinpost} alt='' />\n            <img className='blogIcon' src={twitterpost} alt='' />\n            <img className='blogIcon' src={facebook} alt='' />\n            <img className='blogIcon' src={instagrampost} alt='' />\n            <img className='blogIcon' src={whatsapp} alt='' />\n          </div>\n        </div>\n        <div className='blogItem'>\n          <div className='blogDate'>{this.state.posts[0].date}</div>\n          <div className='blogName'>{this.state.posts[0].name}</div>\n          <img className='blogImage' src={this.state.posts[0].url} />\n          <p className='blogPost'>\n            Books are a great source of knowledge and wisdom. Most programmers\n            are self-taught and realize the power of learning through books. If\n            you aren't too keen on books, it is about time for you to take the\n            plunge and to code better. With fast-paced developments in\n            technology, there are new programming languages and tools being\n            introduced. Regardless of the language and the coding method, a good\n            approach to problem solving can be found from constantly reading\n            good books and here are some recommendations that we'd like to make.{' '}\n            <br></br>\n            1. The Pragmatic Programmer <br></br>This is not a programming book\n            per se, that will teach you how to code. The wisdom shared in this\n            book applies to all the programming languages out there. The\n            insights shared in The Pragmatic Programmer can help you produce\n            better designs, develop a great team and manage expectations in a\n            better manner. Reading this book can help you improve your overall\n            personality as a programmer. <br></br>2. You Donât Know JS by Kyle\n            Simpson <br></br>This book series by Kyle Simpson is considered to\n            be a bible for JavaScript. Every developer getting started with JS\n            must read this book. The book will require a bit of programming\n            background but itâs worth reading. The author has published the full\n            copy of each book in this series on GitHub. <br></br>3. HTML & CSS:\n            Design and Build Web Sites by Jon Duckett <br></br> Some of the\n            insights shared in this book cannot be found on any discussion forum\n            on the internet. Every time you pick up this book, you will read\n            something. The book is full of knowledge around HTML and CSS. You\n            cannot read and learn everything covered in this book, all at once.\n            So take your time and imbibe the knowledge each time you return to\n            this book. <br></br>4. Clean Code by Robert C Martin<br></br>This is\n            an epic book on software craftsmanship. The book will not only help\n            you become a good coder, but it will teach you effective ways to\n            approach software development. The book includes insights on the\n            principles, practices, and patterns of writing clean code. It\n            comprises of several case studies to help developers learn valuable\n            lessons of cleaning up the code.<br></br> 5. Working Effectively\n            With Legacy Code by Michael C Feathers <br></br> Working with legacy\n            code is the most boring job for any developer. At the same time,\n            there is nothing more important in any job than legacy code. The\n            book describes how to modify legacy code, identify parts of the code\n            to refactor. The book also answers several key questions that\n            anybody working on a legacy code will have.\n          </p>\n          <p className='blogMore' onClick={this.expander}>\n            MORE\n          </p>\n          <div className='blogShare'>\n            <img className='blogIcon' src={linkedinpost} alt='' />\n            <img className='blogIcon' src={twitterpost} alt='' />\n            <img className='blogIcon' src={facebook} alt='' />\n            <img className='blogIcon' src={instagrampost} alt='' />\n            <img className='blogIcon' src={whatsapp} alt='' />\n          </div>\n        </div>\n        <div className='blogItem'>\n          <div className='blogDate'>{this.state.posts[0].date}</div>\n          <div className='blogName'>{this.state.posts[0].name}</div>\n          <img className='blogImage' src={this.state.posts[0].url} />\n          <p className='blogPost'>\n            Books are a great source of knowledge and wisdom. Most programmers\n            are self-taught and realize the power of learning through books. If\n            you aren't too keen on books, it is about time for you to take the\n            plunge and to code better. With fast-paced developments in\n            technology, there are new programming languages and tools being\n            introduced. Regardless of the language and the coding method, a good\n            approach to problem solving can be found from constantly reading\n            good books and here are some recommendations that we'd like to make.{' '}\n            <br></br>\n            1. The Pragmatic Programmer <br></br>This is not a programming book\n            per se, that will teach you how to code. The wisdom shared in this\n            book applies to all the programming languages out there. The\n            insights shared in The Pragmatic Programmer can help you produce\n            better designs, develop a great team and manage expectations in a\n            better manner. Reading this book can help you improve your overall\n            personality as a programmer. <br></br>2. You Donât Know JS by Kyle\n            Simpson <br></br>This book series by Kyle Simpson is considered to\n            be a bible for JavaScript. Every developer getting started with JS\n            must read this book. The book will require a bit of programming\n            background but itâs worth reading. The author has published the full\n            copy of each book in this series on GitHub. <br></br>3. HTML & CSS:\n            Design and Build Web Sites by Jon Duckett <br></br> Some of the\n            insights shared in this book cannot be found on any discussion forum\n            on the internet. Every time you pick up this book, you will read\n            something. The book is full of knowledge around HTML and CSS. You\n            cannot read and learn everything covered in this book, all at once.\n            So take your time and imbibe the knowledge each time you return to\n            this book. <br></br>4. Clean Code by Robert C Martin<br></br>This is\n            an epic book on software craftsmanship. The book will not only help\n            you become a good coder, but it will teach you effective ways to\n            approach software development. The book includes insights on the\n            principles, practices, and patterns of writing clean code. It\n            comprises of several case studies to help developers learn valuable\n            lessons of cleaning up the code.<br></br> 5. Working Effectively\n            With Legacy Code by Michael C Feathers <br></br> Working with legacy\n            code is the most boring job for any developer. At the same time,\n            there is nothing more important in any job than legacy code. The\n            book describes how to modify legacy code, identify parts of the code\n            to refactor. The book also answers several key questions that\n            anybody working on a legacy code will have.\n          </p>\n          <p className='blogMore' onClick={this.expander}>\n            MORE\n          </p>\n          <div className='blogShare'>\n            <img className='blogIcon' src={linkedinpost} alt='' />\n            <img className='blogIcon' src={twitterpost} alt='' />\n            <img className='blogIcon' src={facebook} alt='' />\n            <img className='blogIcon' src={instagrampost} alt='' />\n            <img className='blogIcon' src={whatsapp} alt='' />\n          </div>\n        </div>\n        <div className='blogItem'>\n          <div className='blogDate'>{this.state.posts[0].date}</div>\n          <div className='blogName'>{this.state.posts[0].name}</div>\n          <img className='blogImage' src={this.state.posts[0].url} />\n          <p className='blogPost'>\n            Books are a great source of knowledge and wisdom. Most programmers\n            are self-taught and realize the power of learning through books. If\n            you aren't too keen on books, it is about time for you to take the\n            plunge and to code better. With fast-paced developments in\n            technology, there are new programming languages and tools being\n            introduced. Regardless of the language and the coding method, a good\n            approach to problem solving can be found from constantly reading\n            good books and here are some recommendations that we'd like to make.{' '}\n            <br></br>\n            1. The Pragmatic Programmer <br></br>This is not a programming book\n            per se, that will teach you how to code. The wisdom shared in this\n            book applies to all the programming languages out there. The\n            insights shared in The Pragmatic Programmer can help you produce\n            better designs, develop a great team and manage expectations in a\n            better manner. Reading this book can help you improve your overall\n            personality as a programmer. <br></br>2. You Donât Know JS by Kyle\n            Simpson <br></br>This book series by Kyle Simpson is considered to\n            be a bible for JavaScript. Every developer getting started with JS\n            must read this book. The book will require a bit of programming\n            background but itâs worth reading. The author has published the full\n            copy of each book in this series on GitHub. <br></br>3. HTML & CSS:\n            Design and Build Web Sites by Jon Duckett <br></br> Some of the\n            insights shared in this book cannot be found on any discussion forum\n            on the internet. Every time you pick up this book, you will read\n            something. The book is full of knowledge around HTML and CSS. You\n            cannot read and learn everything covered in this book, all at once.\n            So take your time and imbibe the knowledge each time you return to\n            this book. <br></br>4. Clean Code by Robert C Martin<br></br>This is\n            an epic book on software craftsmanship. The book will not only help\n            you become a good coder, but it will teach you effective ways to\n            approach software development. The book includes insights on the\n            principles, practices, and patterns of writing clean code. It\n            comprises of several case studies to help developers learn valuable\n            lessons of cleaning up the code.<br></br> 5. Working Effectively\n            With Legacy Code by Michael C Feathers <br></br> Working with legacy\n            code is the most boring job for any developer. At the same time,\n            there is nothing more important in any job than legacy code. The\n            book describes how to modify legacy code, identify parts of the code\n            to refactor. The book also answers several key questions that\n            anybody working on a legacy code will have.\n          </p>\n          <p className='blogMore' onClick={this.expander}>\n            MORE\n          </p>\n          <div className='blogShare'>\n            <img className='blogIcon' src={linkedinpost} alt='' />\n            <img className='blogIcon' src={twitterpost} alt='' />\n            <img className='blogIcon' src={facebook} alt='' />\n            <img className='blogIcon' src={instagrampost} alt='' />\n            <img className='blogIcon' src={whatsapp} alt='' />\n          </div>\n        </div>\n        <div className='blogItem'>\n          <div className='blogDate'>{this.state.posts[0].date}</div>\n          <div className='blogName'>{this.state.posts[0].name}</div>\n          <img className='blogImage' src={this.state.posts[0].url} />\n          <p className='blogPost'>\n            Books are a great source of knowledge and wisdom. Most programmers\n            are self-taught and realize the power of learning through books. If\n            you aren't too keen on books, it is about time for you to take the\n            plunge and to code better. With fast-paced developments in\n            technology, there are new programming languages and tools being\n            introduced. Regardless of the language and the coding method, a good\n            approach to problem solving can be found from constantly reading\n            good books and here are some recommendations that we'd like to make.{' '}\n            <br></br>\n            1. The Pragmatic Programmer <br></br>This is not a programming book\n            per se, that will teach you how to code. The wisdom shared in this\n            book applies to all the programming languages out there. The\n            insights shared in The Pragmatic Programmer can help you produce\n            better designs, develop a great team and manage expectations in a\n            better manner. Reading this book can help you improve your overall\n            personality as a programmer. <br></br>2. You Donât Know JS by Kyle\n            Simpson <br></br>This book series by Kyle Simpson is considered to\n            be a bible for JavaScript. Every developer getting started with JS\n            must read this book. The book will require a bit of programming\n            background but itâs worth reading. The author has published the full\n            copy of each book in this series on GitHub. <br></br>3. HTML & CSS:\n            Design and Build Web Sites by Jon Duckett <br></br> Some of the\n            insights shared in this book cannot be found on any discussion forum\n            on the internet. Every time you pick up this book, you will read\n            something. The book is full of knowledge around HTML and CSS. You\n            cannot read and learn everything covered in this book, all at once.\n            So take your time and imbibe the knowledge each time you return to\n            this book. <br></br>4. Clean Code by Robert C Martin<br></br>This is\n            an epic book on software craftsmanship. The book will not only help\n            you become a good coder, but it will teach you effective ways to\n            approach software development. The book includes insights on the\n            principles, practices, and patterns of writing clean code. It\n            comprises of several case studies to help developers learn valuable\n            lessons of cleaning up the code.<br></br> 5. Working Effectively\n            With Legacy Code by Michael C Feathers <br></br> Working with legacy\n            code is the most boring job for any developer. At the same time,\n            there is nothing more important in any job than legacy code. The\n            book describes how to modify legacy code, identify parts of the code\n            to refactor. The book also answers several key questions that\n            anybody working on a legacy code will have.\n          </p>\n          <p className='blogMore' onClick={this.expander}>\n            MORE\n          </p>\n          <div className='blogShare'>\n            <img className='blogIcon' src={linkedinpost} alt='' />\n            <img className='blogIcon' src={twitterpost} alt='' />\n            <img className='blogIcon' src={facebook} alt='' />\n            <img className='blogIcon' src={instagrampost} alt='' />\n            <img className='blogIcon' src={whatsapp} alt='' />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Blog;\n","import React, { Component } from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport Header from './components/Header';\nimport Home from './components/Home';\nimport About from './components/About';\nimport Contact from './components/Contact';\nimport Work from './components/Work';\nimport Blog from './components/Blog';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter>\n        <div className='myBody'>\n          <Header />\n          <Switch>\n            <Route exact path='/' component={Home} />\n            <Route path='/about' component={About} />\n            <Route path='/work' component={Work} />\n            <Route path='/blog' component={Blog} />\n            <Route path='/contact' component={Contact} />\n          </Switch>\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}